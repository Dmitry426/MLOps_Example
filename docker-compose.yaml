networks:
  mlops:
    name: mlops
services:
  pgadmin:
    container_name: pgadmin4
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    ports:
    - published: 5050
      target: 80
    restart: always
  postgres:
    command:
    - postgres
    - -c
    - max_connections=150
    volumes:
    - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
    healthcheck:
      interval: 10s
      retries: 60
      start_period: 2s
      test: pg_isready -q -d $POSTGRES_DB -U $POSTGRES_USER || exit 1
      timeout: 2s
    image: postgres:latest
    ports:
    - 127.0.0.1:5432:5432/tcp
    restart: always
  minio:
    restart: always
    container_name: minio
    image: minio/minio
    environment:
      MINIO_ROOT_USER: ${AWS_ACCESS_KEY_ID}
      MINIO_ROOT_PASSWORD: ${AWS_SECRET_ACCESS_KEY}
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - ./storage/minio:/data
    command: server --console-address ":9001" /data
  mlflow:
    restart: always
    build: ./mlflow
    container_name: mlflow_server
    depends_on:
        - minio
        - postgres
    ports:
        - "5001:5000"
    environment:
        - MLFLOW_S3_ENDPOINT_URL=http://minio:9000
        - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
        - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
    command: >
      bash -c "mlflow db upgrade postgresql+psycopg2://$POSTGRES_USER:$POSTGRES_PASSWORD@postgres:5432/mlflow
      && mlflow server --backend-store-uri postgresql+psycopg2://$POSTGRES_USER:$POSTGRES_PASSWORD@postgres:5432/mlflow --default-artifact-root s3://mlflow/ --host 0.0.0.0"


version: '1.2'